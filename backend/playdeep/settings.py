"""
Django settings for playdeep project.

Generated by 'django-admin startproject' using Django 5.0.12.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from decouple import config
import datetime as datatime

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_SECRET_KEY', cast=str)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', cast=bool, default=False)

ALLOWED_HOSTS = [
    ".railway.app"
]
if DEBUG:
    ALLOWED_HOSTS = ["*"]


SITE_ID = 1
# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    #third party apps
    'corsheaders',
    'taggit',
    'ninja_extra',
    'ninja_jwt',
    # internal apps
    'blog.apps.BlogConfig',
    'video',
        
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CSRF_TRUSTED_ORIGINS = [
    "https://*.railway.app",
    "http://*.railway.app",
    "https://*.vercel.app",
    "https://www.playdeep.pro",
    "https://playdeep.pro",
]

ROOT_URLCONF = 'playdeep.urls'

CORS_ALLOWED_ORIGINS = []
ENV_CORS_ALLOWED_ORIGINS = config("CORS_ALLOWED_ORIGINS", cast=str, default="")
if ENV_CORS_ALLOWED_ORIGINS:
    for origin in ENV_CORS_ALLOWED_ORIGINS.split(","):
        if origin.strip():  # Only add non-empty origins
            CORS_ALLOWED_ORIGINS.append(origin.strip())  # Remove .lower() to preserve case
else:
    # Fallback origins if no environment variable is set
    CORS_ALLOWED_ORIGINS = [
        "https://www.playdeep.pro",
        "https://playdeep.pro",
        "http://localhost:3000",
        "http://127.0.0.1:3000",
    ]

# Allow specific headers that your frontend might send
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'access-control-allow-credentials',
]

# Allow specific methods
CORS_ALLOWED_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Allow credentials in CORS requests
CORS_ALLOW_CREDENTIALS = True

# Ensure preflight requests are handled properly
CORS_PREFLIGHT_MAX_AGE = 86400

# Allow all origins in development, but use specific origins in production
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True
else:
    CORS_ALLOW_ALL_ORIGINS = False

# Debug: Print CORS configuration (remove this in production)
print(f"DEBUG: {DEBUG}")
print(f"CORS_ALLOW_ALL_ORIGINS: {CORS_ALLOW_ALL_ORIGINS}")
print(f"CORS_ALLOWED_ORIGINS: {CORS_ALLOWED_ORIGINS}")

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'playdeep.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'OPTIONS': {
            'sslmode': 'require',  # forces encrypted connection
        },
    },
    'extra': {
       'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / "db.sqlite3",  # Archivo en el mismo directorio que manage.py
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

NINJA_JWT = {
    'ACCESS_TOKEN_LIFETIME': datatime.timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': datatime.timedelta(days=3),
}

# Azure Storage settings
DEFAULT_FILE_STORAGE = 'video.storage_backends.AzureMediaStorage'
AZURE_UPLOAD_CHUNK_SIZE = 4 * 1024 * 1024  # 4MB

# Increase the maximum file upload size to 100MB (or whatever size you need)
DATA_UPLOAD_MAX_MEMORY_SIZE = 160857600  # 160MB in bytes
FILE_UPLOAD_MAX_MEMORY_SIZE = 160857600  # 160MB in bytes

# Increase request timeout for long-running operations like OpenAI API calls
GUNICORN_TIMEOUT = 300  # 5 minutes

